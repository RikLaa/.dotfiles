setopt histignorealldups sharehistory
setopt complete_aliases

# Do not beep
setopt nobeep

# Use emacs/vi keybindings even if our EDITOR is set to vi
bindkey -e
# bindkey -v

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=$HOME/.cache/zsh/history

# Use modern completion system
autoload -Uz compinit
compinit

# Shift-tab to reverse men u
bindkey '^[[Z' reverse-menu-complete

# Better settings for completion menu
zstyle ':completion:*' menu select
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
# # Complete . and .. special directories
zstyle ':completion:*' special-dirs true

default-backward-delete-word () {
  local WORDCHARS="*?_[]~=&;!#$%^(){}<>"
  zle backward-delete-word
}
zle -N default-backward-delete-word
bindkey '^W' default-backward-delete-word

# Expand command on !!
bindkey ' ' magic-space

# c-x to open current line in $EDITOR
autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

autoload -U colors && colors

# Adds prompt
function precmd {
    # Add git to prompt
    is_git() { 
        git status >/dev/null 2>&1 
    }

    GIT_PROMPT=''
    if is_git; then

        git_status=$(git status -sb)

        git_dirty_files=$(echo $git_status | grep '[AMD??]' -c) 
        git_dirty=''
        if [[ $git_dirty_files > 0 ]]; then
            git_dirty="%{$fg[yellow]%}*"
        fi

        git_branch="%{$fg[red]%} ($(git branch | sed -n 's/[*][a-zA-Z/]*//p' | cut -b 2- || ''))"

        git_ahead_amount=$(echo $git_status | grep 'ahead.[0-9]' -o | cut -b 7- )
        git_ahead=''
        if [[ $git_ahead_amount > 0 ]]; then
            # green
            git_ahead="%{$fg[green]%} +$git_ahead_amount"
        fi

        git_behind=''
        git_behind_amount=$(echo $git_status | grep 'behind.[0-9]' -o | cut -b 8-)
        if [[ $git_behind_amount > 0 ]]; then
            # red 
            git_behind="%{$fg[red]%} -$git_behind_amount"

        fi
        GIT_PROMPT="$git_branch$git_dirty$git_ahead$git_behind%{$reset_color%}"
    fi

    # Background processes
    BACKGROUND_JOBS_PROMPT=$( [ -z "$(jobs | tail -1)" ] && echo '' || echo " %{$fg[yellow]%}{%j}%{$reset_color%}")
    PROMPT="%B%{$fg[blue]%} %c%{$reset_color%}$GIT_PROMPT%b$BACKGROUND_JOBS_PROMPT "

}


# Source custom aliases, functions, ...etc
shell_dir=$HOME/.dotfiles/shell

source $shell_dir/env
source $shell_dir/functions
source $shell_dir/plugins/bookmarks

if [ -f $shell_dir/aliases ]; then
    . $shell_dir/aliases
    
    # compdef is only for zsh
    compdef g='git'
fi

# Autosuggestions
# . $shell_dir/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
# Highlighting
# . $shell_dir/zsh/zsh-syntax-highlightning/zsh-syntax-highlighting.zsh

# Set the terminal theme
. ~/.local/bin/refresh_theme.sh
